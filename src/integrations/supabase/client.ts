// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://mknhgpmymovblhdqzcbl.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Im1rbmhncG15bW92YmxoZHF6Y2JsIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDQ2NTU5OTIsImV4cCI6MjA2MDIzMTk5Mn0.s1pH2bxSKsFQ_qVFvZ37X0FmnFHJ-MazjLcwv6d6It4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

// Get the current URL and construct the callback URL
const getCallbackUrl = () => {
  const url = new URL(window.location.href);
  const isProduction = process.env.NODE_ENV === 'production';
  const basePath = isProduction ? '/dragonfly-expense-hub' : '';
  return `${url.origin}${basePath}/auth/callback`;
};

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce',
    storageKey: 'supabase.auth.token'
  }
});

// Export a function to handle Google login with the correct redirect URL
export const signInWithGoogle = async () => {
  const { data, error } = await supabase.auth.signInWithOAuth({
    provider: 'google',
    options: {
      redirectTo: getCallbackUrl()
    }
  });
  
  if (error) {
    console.error('Error signing in with Google:', error);
    throw error;
  }
  
  return data;
};